<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" 
	creationComplete="onCreationComplete()" xmlns:view="pl.cani.mindmap.view.*">

	<mx:Script>
		<![CDATA[
			import mx.validators.ValidationResult;
			import mx.collections.ArrayCollection;
			import mx.controls.listClasses.IListItemRenderer;
			import mx.events.DataGridEvent;
			import pl.cani.mindmap.model.MindmapUserPair;
			import mx.events.ListEvent;
			import mx.controls.Alert;
			import mx.controls.CheckBox;
			import com.mikenimer.components.Debug;
			import pl.cani.mindmap.model.MindmapPrivilages;
			import mx.controls.dataGridClasses.DataGridColumn;
			import pl.cani.mindmap.vo.UserVO;
			
			private var user : UserVO = new UserVO();

			[Bindable]
			private var users : Array = [ user ];
			
			[Bindable]
			private var readWrite : uint = 2;
			
			private var dupa : Array = [ "asdf", "asdf", "dgh" ];
			
			[Bindable]
			private var pairs : Array = [
				new MindmapUserPair( null, 
					new UserVO( "Jan", "Kłosiński", "janek@cani.pl" ), 
					MindmapPrivilages.READ_WRITE ),
				new MindmapUserPair( null, 
					new UserVO( "Mietek", "Krawężnik", "mietek@kraweznik.pl" ), 
					MindmapPrivilages.READ ),
				new MindmapUserPair( null, 
					new UserVO( "Kuzyn", "Mietka", "kuzyn@mietka.pl" ), 
					MindmapPrivilages.READ )
			];
				
			private function onCreationComplete() : void {
				user.id = 1;
				user.forname = "Janek";
				user.surname = "Kłosiński";
				user.email = "vanjan@gmail.com";
				
//				Debug.show( pairs );
			}
			
			private function displayUserName( pair : MindmapUserPair, 
					column : DataGridColumn ) : String {
				return pair.user.forname + " " + pair.user.surname;
			}
			
			private function displayUserEmail( pair : MindmapUserPair,
					column : DataGridColumn ) : String {
				return pair.user.email;
			}
			
			[Bindable]
			private var debug : String = "";
			
			private function onItemEditEnd( event : DataGridEvent ) : void {
  				var dataGrid : DataGrid = event.target as DataGrid;
  				var itemEditorInstance : IListItemRenderer 
					= event.target.itemEditorInstance;
  				var column : DataGridColumn = dataGrid.columns[ event.columnIndex ];
  				var newValue : Object = itemEditorInstance[ column.editorDataField ];
  				
				debug = event.target.dataProvider[ event.rowIndex ].user.forname + "\n";
				debug += event.dataField + " changed from " 
					+ event.target.dataProvider[ event.rowIndex ][ event.dataField ]
					+ " to " + newValue;
					
				deleteItem();
			}
			
			private function deleteItem() : void {
				( dg2.dataProvider as ArrayCollection ).removeItemAt( 1 );
			}
			
			private function onClick( event : MouseEvent ) : void {
				debug = "click";
			}
			
		]]>
	</mx:Script>
	
	<mx:Button id="delBtn" click="deleteItem()" label="del" />

	<mx:DataGrid id="dg2" dataProvider="{ pairs }">
		<mx:columns>
			<mx:DataGridColumn labelFunction="displayUserName" 
				headerText="Imię i nazwisko" rendererIsEditor="true" 
				editorDataField="text" dataField="user" />
			<mx:DataGridColumn labelFunction="displayUserEmail"
				headerText="Email" rendererIsEditor="true" 
				editorDataField="text" dataField="user" />
			<mx:DataGridColumn dataField="canRead" headerText="Read"
				rendererIsEditor="true" itemRenderer="mx.controls.CheckBox"
				editorDataField="selected" />
			<mx:DataGridColumn dataField="canWrite" headerText="Write"
				rendererIsEditor="true" itemRenderer="mx.controls.CheckBox"
				editorDataField="selected" />
			<mx:DataGridColumn id="newCol" dataField="canWrite">
				<mx:itemRenderer>
					<mx:Component>
						<view:CheckBoxRenderer dataField="canWrite" />
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
		</mx:columns>
	</mx:DataGrid>
	
	<mx:TextArea id="debugTxt" text="{debug}" width="100%" />
	
</mx:Application>
