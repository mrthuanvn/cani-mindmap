<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" title="Mindmap management" 
	layout="absolute" creationComplete="onCreationComplete()" 
	resizeEffect="{resizeEffect}" xmlns:view="pl.cani.mindmap.view.*" xmlns:controls="pl.cani.mindmap.controls.*">

	<mx:Script>
		<![CDATA[
			import com.adobe.cairngorm.view.ViewLocator;
			import com.asual.swfaddress.SWFAddress;
			
			import pl.cani.mindmap.view.helpers.ViewNames;
			import pl.cani.mindmap.model.AppModelLocator;
			import pl.cani.mindmap.model.MindmapUserPair;
			import pl.cani.mindmap.view.helpers.ManagementPanelHelper;

			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.effects.easing.*;
			import mx.resources.ResourceBundle;
			
			
			private var helper : ManagementPanelHelper;
			
			[ResourceBundle( "ManagementPanel" )]
			private var rb : ResourceBundle;
			
			[Bindable]
			private var saveMindmap : String = rb.getString( "saveMindmap" );
			
			
			private function onCreationComplete() : void {
				helper = new ManagementPanelHelper( this );
				ViewLocator.getInstance().register( ViewNames.MANAGEMENT_PANEL, 
					helper );
				
				AppModelLocator.getInstance().mindmapUsersDataGrid 
					= mindmapUsersDataGrid;
				
				helper.findMindmaps();
							
				show.play();
			}
			
			private function onKeyDown( event : KeyboardEvent ) : void {
				if ( event.keyCode == Keyboard.ENTER ) {
					helper.createMindmap();
				}
			}
			
			private function onGrantPrivilagesBtnClick() : void {
				SWFAddress.setValue( ViewNames.PRIVILAGES );
				AppModelLocator.getInstance().mainView.currentState = 'privilages';
			}
			
			private function displayUserName( pair : MindmapUserPair, 
					column : DataGridColumn ) : String {
				return pair.user.forname + " " + pair.user.surname;
			}
			
			private function displayUserEmail( pair : MindmapUserPair,
					column : DataGridColumn ) : String {
				return pair.user.email;
			}
			
		]]>
	</mx:Script>

	<mx:Resize id="resizeEffect" duration="200" easingFunction="Quintic.easeInOut" />

	<mx:Sequence id="show" target="{this}">
		<mx:SetPropertyAction name="visible" value="false" />
		<mx:Zoom zoomHeightFrom="0" zoomWidthFrom="0" duration="500"
			easingFunction="Quintic.easeInOut"
			tweenStart="this.visible = true" />
	</mx:Sequence>

	<mx:states>
		<mx:State name="createMindmap" enterState="focusManager.setFocus( mindmapNameTxt )">
			<mx:AddChild relativeTo="{ vbox1 }" position="lastChild">
				<mx:Form defaultButton="{ addMindmapBtn }">
					<mx:FormHeading label="Add a Mind Map" />
					<mx:FormItem label="@Resource( key = 'name', 
						bundle = 'Generic' )">
						<mx:TextInput id="mindmapNameTxt" />
					</mx:FormItem>
					<mx:FormItem label="@Resource( 'requiresPassword' )">
						<mx:CheckBox id="requiresPasswordCheckBox" />
					</mx:FormItem>
					<mx:FormItem label="@Resource( key = 'password', 
						bundle = 'Generic' )">
						<mx:TextInput id="passwordTxt" displayAsPassword="true" />
					</mx:FormItem>
					<mx:HBox horizontalAlign="center" width="100%">
						<controls:RemotingButton id="addMindmapBtn"
							enabledLabel="@Resource( key = 'add', bundle = 'Generic' )"
							disabledLabel="@Resource( key = 'saving', bundle = 'Generic' )"
							click="helper.createMindmap()" />
						<mx:Button label="@Resource( key = 'cancel', bundle = 'Generic' )"
							click="currentState = ''" />
					</mx:HBox>
				</mx:Form>
			</mx:AddChild>
			<mx:RemoveChild target="{createMindMapBtn}"/>
		</mx:State>
	</mx:states>

	<mx:VBox bottom="10" top="10" id="vbox1" right="10" left="10">
	
		<mx:HBox width="100%">
			<mx:Label text="@Resource( 'myMindmaps' )" id="myMindmapsLbl"/>
			<mx:ComboBox id="mindmapsCbx" change="helper.loadMindmapData( event )"
				dataProvider="{ AppModelLocator.getInstance().myMindmaps }"
				resizeEffect="{resizeEffect}" />
		</mx:HBox>
	
		<mx:DataGrid id="mindmapUsersDataGrid" dropEnabled="true"
			dragDrop="helper.popUpPrivilagesWindow( event )">
			<mx:columns>
				<mx:DataGridColumn labelFunction="displayUserName" 
					headerText="@Resource( key = 'fullname', bundle = 'Generic' )" 
					 />
				<mx:DataGridColumn labelFunction="displayUserEmail"
					headerText="E-mail" />
				<mx:DataGridColumn dataField="canRead" width="50"
					headerText="@Resource( key = 'read', bundle = 'Generic' )">
					<mx:itemRenderer>
						<mx:Component>
							<view:CheckBoxRenderer dataField="canRead" />
						</mx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn dataField="canWrite" width="50"
					headerText="@Resource( key = 'write', bundle = 'Generic' )">
					<mx:itemRenderer>
						<mx:Component>
							<view:CheckBoxRenderer dataField="canWrite" />
						</mx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
			</mx:columns>
		</mx:DataGrid>
	
		<mx:HBox width="100%" id="hbox1">
			<mx:Button label="@Resource( 'grantPrivilages' )" id="grantPrivilagesBtn"
				click="onGrantPrivilagesBtnClick()"/>
			<mx:Button label="@Resource( 'createMindmap' )" id="createMindMapBtn" 
				click="currentState = 'createMindmap'"/>
		</mx:HBox>
	
	</mx:VBox>
	
</mx:Panel>